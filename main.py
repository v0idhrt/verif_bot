# main.py

import discord
from discord.ext import commands
from discord import Object
import logging

from config import settings
from domain.services.verification_service import VerificationService
from core.commands.verify_panel import setup as setup_verify
from core.events.member_events import setup_member_events

logging.basicConfig(level=logging.INFO)
log = logging.getLogger("verifbot")

intents = discord.Intents.default()
intents.guilds = True
intents.members = True

GUILD = Object(id=settings.guild_id)

class VerifBot(commands.Bot):
    def __init__(self):
        super().__init__(
            command_prefix="!",  # –Ω–µ –≤–∞–∂–Ω–æ, —Å–ª–µ—à‚Äë–∫–æ–º–∞–Ω–¥—ã
            intents=intents
        )
        self.verification_service = VerificationService(
            {"male": settings.male_role_id, "female": settings.female_role_id},
            settings.unverified_role_id
        )

    async def setup_hook(self):
        log.info("üîß setup_hook: —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Cogs –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã")
        await setup_verify(self, self.verification_service)
        await setup_member_events(self)
        synced = await self.tree.sync(guild=GUILD)
        log.info("‚úÖ Synced commands for guild %s: %s", GUILD.id, [c.name for c in synced])

    async def on_ready(self):
        log.info("üöÄ Logged in as %s (ID: %s)", self.user, self.user.id)

if __name__ == "__main__":
    bot = VerifBot()
    log.info("üü¢ Starting bot‚Ä¶")
    bot.run(settings.discord_token)
    log.info("üõë Bot has stopped")
